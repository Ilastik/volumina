version: 2
## Customize the test machine
jobs:
  build:
    working_directory: ~/ilastik/volumina
    parallelism: 1
    shell: /bin/bash --login
    environment:
      CONDA_ROOT: /home/ubuntu/miniconda
      TEST_ENV_NAME: test-env
      TEST_ENV_PREFIX: /home/ubuntu/miniconda/envs/test-env
    docker:
    - image: circleci/build-image:ubuntu-14.04-XXL-upstart-1189-5614f37
      command: /sbin/init
    steps:
    # add interpolated environment variables (CircleCI 2.0 does not support direct interpolation)
    - run: echo 'export PATH=${TEST_ENV_PREFIX}/bin:${CONDA_ROOT}/bin:${PATH}' >> $BASH_ENV
    - run: echo 'export PYTHONPATH=${PYTHONPATH}:${TEST_ENV_PREFIX}/ilastik-meta/lazyflow:${TEST_ENV_PREFIX}/ilastik-meta/volumina:${TEST_ENV_PREFIX}/ilastik-meta/ilastik' >> $BASH_ENV
    - checkout
    # Prepare for artifact and test results  collection equivalent to how it was done on 1.0.
    # In many cases you can simplify this from what is generated here.
    # 'See docs on artifact collection here https://circleci.com/docs/2.0/artifacts/'
    # - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
    # Restore the dependency cache
    - restore_cache:
        keys:
        # This branch if available
        - v1.31b3rc0-dep-{{ .Branch }}-
        # Default branch if not
        - v1.31b3rc0-dep-master-
        # Any branch if there are none on the default branch - this should be unnecessary if you have your default branch configured correctly
        - v1.31b3rc0-dep-
    - run: |
        if [[ ! -d ${CONDA_ROOT} ]]; then
            echo "Installing Miniconda...";
            wget --quiet https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh &&
            bash Miniconda3-latest-Linux-x86_64.sh -b -p ${CONDA_ROOT};
        else
            echo "Using cached Miniconda install";
        fi
    - run: |
        if [ ! -d ${TEST_ENV_PREFIX} ]; then
            conda create -y -n ${TEST_ENV_NAME} -c ilastik-forge -c conda-forge/label/cf201901 python=3.6 numpy=1.12 ilastik-dependencies-no-solvers;
        else
            conda install -y -n ${TEST_ENV_NAME} -c ilastik-forge -c conda-forge/label/cf201901 python=3.6 numpy=1.12 ilastik-dependencies-no-solvers;
        fi
    - run: rm -rf ${TEST_ENV_PREFIX}/ilastik-meta
    - run: git clone http://github.com/ilastik/ilastik-meta ${TEST_ENV_PREFIX}/ilastik-meta
    - run: cd ${TEST_ENV_PREFIX}/ilastik-meta && git submodule init
    - run: cd ${TEST_ENV_PREFIX}/ilastik-meta && git submodule update --recursive
    - run: cd ${TEST_ENV_PREFIX}/ilastik-meta && git submodule foreach "git checkout master"
    - run: rm -rf ${TEST_ENV_PREFIX}/ilastik-meta/volumina
    - run: ln -s `pwd` ${TEST_ENV_PREFIX}/ilastik-meta/volumina
    # Save dependency cache
    - save_cache:
        key: v1.31b3rc0-dep-{{ .Branch }}-{{ epoch }}
        paths:
        - /home/ubuntu/miniconda
    # Test
    - run: source ${CONDA_ROOT}/bin/activate ${TEST_ENV_NAME} && cd ${TEST_ENV_PREFIX}/ilastik-meta/volumina && pytest
